buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
        
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '0.1.0'
group = 'com.melonstudios.createlegacy' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'create'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'
            arg '-torg.spongepowered.asm.launch.MixinTweaker'
        }

        server {

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'
            arg '-torg.spongepowered.asm.launch.MixinTweaker'
        }
    }
}

repositories {
    maven { url = 'https://repo.spongepowered.org/maven' }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        url "https://cursemaven.com"
    }
    maven { // TOP
        name 'tterrag maven'
        url "https://maven.tterrag.com/"
    }
    maven { // OpenComputers maven
        url = "http://maven.cil.li/"
    }
    maven { // CC Tweaked maven
        url = 'https://squiddev.cc/maven/'
    }
    maven { // GregTech maven
        name 'GTCEu Maven'
        url 'https://maven.gtceu.com'
    }
    maven { // Required for GTCEu
        name 'Cleanroom Maven'
        url 'https://maven.cleanroommc.com'
    }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
    compileOnly project(':create-annotations')
    annotationProcessor project(':create-annotations')
    // our very own annotation processor - not in use rn due to bugs
    // minecraft
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2859'
    // compile against the JEI API but do not include it at runtime
    compileOnly fg.deobf("mezz.jei:jei_${mc_version}:${jei_version}:api")
    // compile against TOP
    compileOnly fg.deobf('curse.maven:top-245211:2667280') // TheOneProbe 1.4.28 (newest on CF)
    // compile against OpenComputers API
    compileOnly "li.cil.oc:OpenComputers:MC1.12.2-1.7.5.221:api" // Newest 1.12.2 OC version I found on the maven
    // compile against CC: Tweaked
    compileOnly fg.deobf('org.squiddev:cc-tweaked-1.12.2:1.89.2') // Newest 1.12.2 CCT version I found on the maven
    // compile against GTCEu
    compileOnly fg.deobf('gregtech:gregtech:2.8.10-beta:dev') // Newest 1.12.2 GTCEu version
    // compile against hwyla
    compileOnly fg.deobf('curse.maven:hwyla-253449:2568751') // Newest 1.12.2 hwyla version I found on CF
    embed('org.spongepowered:mixin:0.8.3-SNAPSHOT') {
        exclude module: 'guava'
        exclude module: 'commons-io'
        exclude module: 'gson'
    }
}



jar {
    manifest {
        attributes([
            "Specification-Title": "createlegacy",
            "Specification-Vendor": "Melon Studios",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"Melon Studios",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

sourceSets {
    main {
        output.resourcesDir = output.classesDir
    }
}